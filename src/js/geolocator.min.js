/*
  Geolocator Javascript Lib v.1.2
  Jaythaceo Jason Brooks
  Google.com/+ceobrooks
*/
var geolocator = function() {
    function m(b, a, f) {
        var c = document.createElement("script");
        c.type = void 0 === f ? "text/javascript" : f;
        "function" === typeof a && (c.readyState ? c.onreadystatechange = function() {
            if ("loaded" === c.readyState || "complete" === c.readyState) c.onreadystatechange = null, a()
        } : c.onload = function() {
            a()
        });
        c.src = b;
        document.getElementsByTagName("head")[0].appendChild(c)
    }

    function p(b) {
        function a() {
            geolocator.__glcb && delete geolocator.__glcb;
            google.load("maps", "3.15", {
                other_params: "sensor=false",
                callback: b
            })
        }
        void 0 !== window.google && void 0 !== google.maps ? b && b() : void 0 !== window.google && void 0 !== google.loader ? a() : (geolocator.__glcb = a, m(t + "?callback=geolocator.__glcb"))
    }

    function u(b, a, f) {
        var c, d, e;
        (b = document.getElementById(b)) ? (c = new google.maps.Map(b, a), d = new google.maps.Marker({
            position: a.center,
            map: c
        }), e = new google.maps.InfoWindow, e.setContent(f), google.maps.event.addListener(d, "click", function() {
            e.open(c, d)
        }), geolocator.location.map = {
            canvas: b,
            map: c,
            options: a,
            marker: d,
            infoWindow: e
        }) : geolocator.location.map =
            null
    }

    function v(b, a) {
        (new google.maps.Geocoder).geocode({
            latLng: b
        }, function(b, c) {
            c === google.maps.GeocoderStatus.OK && a && a(b)
        })
    }

    function q(b) {
        var a = new google.maps.LatLng(b.latitude, b.longitude);
        v(a, function(b) {
            if (b && 0 < b.length) {
                var c, d, e = {},
                    g = b[0].address_components;
                for (c = 0; c < g.length; c += 1) d = g[c], d.types && 0 < d.types.length && (e[d.types[0]] = d.long_name, e[d.types[0] + "_s"] = d.short_name);
                geolocator.location.formattedAddress = b[0].formatted_address;
                geolocator.location.address = {
                    street: e.route || "",
                    neighborhood: e.neighborhood ||
                        "",
                    town: e.sublocality || "",
                    city: e.locality || "",
                    region: e.administrative_area_level_1 || "",
                    country: e.country || "",
                    countryCode: e.country_s || "",
                    postalCode: e.postal_code || "",
                    streetNumber: e.street_number || ""
                }
            }
            u(l, {
                zoom: null === geolocator.location.ipGeoSource ? 14 : 7,
                center: a,
                mapTypeId: "roadmap"
            }, b[0].formatted_address);
            h && h.call(null, geolocator.location)
        })
    }

    function w(b, a) {
        function f(a) {
            var c = !0 === b ? 0 : "number" === typeof b ? b : -1;
            0 <= c ? geolocator.locateByIP(h, g, c, l) : g && g.call(null, a)
        }

        function c(a) {
            geolocator.location = {
                ipGeoSource: null,
                coords: a.coords,
                timestamp: (new Date).getTime()
            };
            q(geolocator.location.coords)
        }

        function d(a) {
            f(a.message)
        }
        geolocator.location = null;
        navigator.geolocation ? navigator.geolocation.getCurrentPosition(c, d, a) : f("geolocation is not supported.")
    }

    function r(b, a) {
        switch (b) {
            case 0:
                geolocator.location = {
                    coords: {
                        latitude: a.latitude,
                        longitude: a.longitude
                    },
                    address: {
                        city: a.city,
                        country: a.country_name,
                        countryCode: a.country_code,
                        region: a.region_name
                    }
                };
                break;
            case 1:
                geolocator.location = {
                    coords: {
                        latitude: a.geoplugin_latitude,
                        longitude: a.geoplugin_longitude
                    },
                    address: {
                        city: a.geoplugin_city,
                        country: a.geoplugin_countryName,
                        countryCode: a.geoplugin_countryCode,
                        region: a.geoplugin_regionName
                    }
                };
                break;
            case 2:
                geolocator.location = {
                    coords: {
                        latitude: a.lat,
                        longitude: a.lon
                    },
                    address: {
                        city: a.city,
                        country: "",
                        countryCode: a.country,
                        region: ""
                    }
                }
        }
        geolocator.location && (geolocator.location.coords.accuracy = null, geolocator.location.coords.altitude = null, geolocator.location.coords.altitudeAccuracy = null, geolocator.location.coords.heading = null, geolocator.location.coords.speed =
            null, geolocator.location.timestamp = (new Date).getTime(), geolocator.location.ipGeoSource = n[b], geolocator.location.ipGeoSource.data = a)
    }

    function s(b) {
        var a = !1;
        geolocator.location = null;
        delete geolocator.__ipscb;
        p(function() {
            2 === k ? void 0 !== window.Geo && (r(k, window.Geo), delete window.Geo, a = !0) : void 0 !== b && (r(k, b), a = !0);
            !0 === a ? q(geolocator.location.coords) : g && g("Could not get location.")
        })
    }
    var h, g, l, t = "https://www.google.com/jsapi",
        n = [{
            url: "http://freegeoip.net/json/",
            cbParam: "callback"
        }, {
            url: "http://www.geoplugin.net/json.gp",
            cbParam: "jsoncallback"
        }, {
            url: "http://geoiplookup.wikimedia.org/",
            cbParam: ""
        }],
        k = 0;
    return {
        location: null,
        locate: function(b, a, f, c, d) {
            h = b;
            g = a;
            l = d;
            p(function() {
                w(f, c)
            })
        },
        locateByIP: function(b, a, f, c) {
            k = void 0 === f || 0 > f || f >= n.length ? 0 : f;
            h = b;
            g = a;
            l = c;
            geolocator.__ipscb = s;
            b = n[k];
            void 0 === b.cbParam || null === b.cbParam || "" === b.cbParam ? m(b.url, s) : m(b.url + "?" + b.cbParam + "=geolocator.__ipscb")
        }
    }
}();